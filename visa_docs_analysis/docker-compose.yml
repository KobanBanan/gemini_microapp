version: "3.8"

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: gemini_app
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d gemini_app"]
      interval: 3s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 3s
      retries: 10

  api:
    build: ./backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: postgresql+asyncpg://dev:dev@postgres:5432/gemini_app
      REDIS_URL: redis://redis:6379/0
    ports:
      - "8000:8000"
    command: sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000"
    volumes:
      - uploads:/app/uploads

  worker:
    build: ./backend
    command: sh -c "celery -A app.workers.celery_app worker --loglevel=info"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: postgresql+asyncpg://dev:dev@postgres:5432/gemini_app
      REDIS_URL: redis://redis:6379/0
    volumes:
      - uploads:/app/uploads

volumes:
  pgdata:
  uploads:


